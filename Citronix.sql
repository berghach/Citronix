-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.farm
(
    id uuid NOT NULL,
    area double precision,
    creation_date date,
    location character varying(30) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT farm_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.field
(
    id uuid NOT NULL,
    area double precision,
    farm_id uuid NOT NULL,
    CONSTRAINT field_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.harvest
(
    id uuid NOT NULL,
    date date,
    season character varying(255) COLLATE pg_catalog."default",
    total_quantity double precision,
    CONSTRAINT harvest_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.harvest_detail
(
    quantity double precision,
    harvest_id uuid NOT NULL,
    tree_id uuid NOT NULL,
    date date,
    CONSTRAINT harvest_detail_pkey PRIMARY KEY (harvest_id, tree_id)
);

CREATE TABLE IF NOT EXISTS public.sale
(
    id uuid NOT NULL,
    client_name character varying(30) COLLATE pg_catalog."default",
    date date,
    unit_price double precision,
    harvest_id uuid,
    CONSTRAINT sale_pkey PRIMARY KEY (id),
    CONSTRAINT ukhawiuk78tv1btpv3jhrphnkuu UNIQUE (harvest_id)
);

CREATE TABLE IF NOT EXISTS public.tree
(
    id uuid NOT NULL,
    age bigint,
    plantation_date date,
    field_id uuid NOT NULL,
    CONSTRAINT tree_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.field
    ADD CONSTRAINT fk_field_farm FOREIGN KEY (farm_id)
    REFERENCES public.farm (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.harvest_detail
    ADD CONSTRAINT fkd605bgwvc1lgsy4ofwkgywcld FOREIGN KEY (harvest_id)
    REFERENCES public.harvest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.harvest_detail
    ADD CONSTRAINT fkgthwd5djmw5xco5iej2udv84n FOREIGN KEY (tree_id)
    REFERENCES public.tree (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale
    ADD CONSTRAINT fkbrbq946u5jq5kpohbicemv66o FOREIGN KEY (harvest_id)
    REFERENCES public.harvest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS ukhawiuk78tv1btpv3jhrphnkuu
    ON public.sale(harvest_id);


ALTER TABLE IF EXISTS public.tree
    ADD CONSTRAINT fk_tree_field FOREIGN KEY (field_id)
    REFERENCES public.field (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

-- Update the function to calculate age in years as an integer
CREATE OR REPLACE FUNCTION update_age()
RETURNS TRIGGER AS $$
BEGIN
    NEW.age := EXTRACT(YEAR FROM age(NEW.plantation_date));
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS update_age_trigger ON tree;

-- Create the trigger
CREATE TRIGGER update_age_trigger
BEFORE INSERT OR UPDATE ON tree
FOR EACH ROW
EXECUTE FUNCTION update_age();

-- Insert data into farm table
INSERT INTO public.farm (id, area, creation_date, location, name)
VALUES
('1e6d7550-4b78-4c60-b021-1e45eaf3b843', 100.5, '2022-01-15', 'Northfield', 'Sunny Farm'),
('bb2d7550-4b78-4c60-b021-1e45eaf3b843', 250.0, '2023-03-01', 'Eastfield', 'Green Pastures');

-- Insert data into field table
INSERT INTO public.field (id, area, farm_id)
VALUES
('2a6d7550-4b78-4c60-b021-1e45eaf3b843', 50.0, '1e6d7550-4b78-4c60-b021-1e45eaf3b843'),
('3b6d7550-4b78-4c60-b021-1e45eaf3b843', 45.0, '1e6d7550-4b78-4c60-b021-1e45eaf3b843'),
('4c6d7550-4b78-4c60-b021-1e45eaf3b843', 125.0, 'bb2d7550-4b78-4c60-b021-1e45eaf3b843');

-- Insert data into tree table
INSERT INTO public.tree (id, age, plantation_date, field_id)
VALUES
('a1237550-4b78-4c60-b021-1e45eaf3b843', 10, '2013-05-15', '2a6d7550-4b78-4c60-b021-1e45eaf3b843'),
('b4567550-4b78-4c60-b021-1e45eaf3b843', 7, '2016-04-10', '3b6d7550-4b78-4c60-b021-1e45eaf3b843'),
('c7897550-4b78-4c60-b021-1e45eaf3b843', 5, '2018-07-20', '4c6d7550-4b78-4c60-b021-1e45eaf3b843');

-- Insert data into harvest table
INSERT INTO public.harvest (id, date, season, total_quantity)
VALUES
('f1237550-4b78-4c60-b021-1e45eaf3b843', '2023-06-15', 'spring', 150.0),
('f4567550-4b78-4c60-b021-1e45eaf3b843', '2023-11-10', 'autumn', 200.0);

-- Insert data into harvest_detail table
INSERT INTO public.harvest_detail (quantity, harvest_id, tree_id, date)
VALUES
(50.0, 'f1237550-4b78-4c60-b021-1e45eaf3b843', 'a1237550-4b78-4c60-b021-1e45eaf3b843', '2023-06-15'),
(100.0, 'f1237550-4b78-4c60-b021-1e45eaf3b843', 'b4567550-4b78-4c60-b021-1e45eaf3b843', '2023-06-15'),
(150.0, 'f4567550-4b78-4c60-b021-1e45eaf3b843', 'c7897550-4b78-4c60-b021-1e45eaf3b843', '2023-11-10');
-- Insert data into sale table
INSERT INTO public.sale (id, client_name, date, unit_price, harvest_id)
VALUES
('12375504-b784-4c60-b021-1e45eaf3b843', 'John Doe', '2023-07-01', 2.5, 'f1237550-4b78-4c60-b021-1e45eaf3b843'),
('45675504-b784-4c60-b021-1e45eaf3b843', 'Jane Smith', '2023-12-01', 3.0, 'f4567550-4b78-4c60-b021-1e45eaf3b843');


END;