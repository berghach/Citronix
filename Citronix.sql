-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.farm
(
    id uuid NOT NULL,
    area double precision,
    creation_date date,
    location character varying(30) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT farm_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.field
(
    id uuid NOT NULL,
    area double precision,
    farm_id uuid NOT NULL,
    CONSTRAINT field_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.harvest
(
    id uuid NOT NULL,
    date date,
    season character varying(255) COLLATE pg_catalog."default",
    total_quantity double precision,
    client_name character varying(30) COLLATE pg_catalog."default",
    unit_price double precision,
    harvest_id uuid,
    CONSTRAINT harvest_pkey PRIMARY KEY (id),
    CONSTRAINT uke5f98pt43csc9gyw8duays0rf UNIQUE (harvest_id)
);

CREATE TABLE IF NOT EXISTS public.harvest_detail
(
    quantity double precision,
    harvest_id uuid NOT NULL,
    tree_id uuid NOT NULL,
    CONSTRAINT harvest_detail_pkey PRIMARY KEY (harvest_id, tree_id)
);

CREATE TABLE IF NOT EXISTS public.sale
(
    id uuid NOT NULL,
    client_name character varying(30) COLLATE pg_catalog."default",
    date date,
    unit_price double precision,
    harvest_id uuid,
    CONSTRAINT sale_pkey PRIMARY KEY (id),
    CONSTRAINT ukhawiuk78tv1btpv3jhrphnkuu UNIQUE (harvest_id)
);

CREATE TABLE IF NOT EXISTS public.tree
(
    id uuid NOT NULL,
    age bigint,
    plantation_date date,
    field_id uuid NOT NULL,
    CONSTRAINT tree_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.field
    ADD CONSTRAINT fk_field_farm FOREIGN KEY (farm_id)
    REFERENCES public.farm (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.harvest
    ADD CONSTRAINT fk4f2kq6bymoc219sqbqawqdpb8 FOREIGN KEY (harvest_id)
    REFERENCES public.harvest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS uke5f98pt43csc9gyw8duays0rf
    ON public.harvest(harvest_id);


ALTER TABLE IF EXISTS public.harvest_detail
    ADD CONSTRAINT fkd605bgwvc1lgsy4ofwkgywcld FOREIGN KEY (harvest_id)
    REFERENCES public.harvest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.harvest_detail
    ADD CONSTRAINT fkgthwd5djmw5xco5iej2udv84n FOREIGN KEY (tree_id)
    REFERENCES public.tree (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale
    ADD CONSTRAINT fkbrbq946u5jq5kpohbicemv66o FOREIGN KEY (harvest_id)
    REFERENCES public.harvest (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS ukhawiuk78tv1btpv3jhrphnkuu
    ON public.sale(harvest_id);


ALTER TABLE IF EXISTS public.tree
    ADD CONSTRAINT fk_tree_field FOREIGN KEY (field_id)
    REFERENCES public.field (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;

-- trigger for Tree age update
CREATE OR REPLACE FUNCTION update_age()
RETURNS TRIGGER AS $$
BEGIN
    NEW.age := age(NEW.plantation_date);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_age_trigger
BEFORE INSERT OR UPDATE ON tree
FOR EACH ROW
EXECUTE FUNCTION update_age();
